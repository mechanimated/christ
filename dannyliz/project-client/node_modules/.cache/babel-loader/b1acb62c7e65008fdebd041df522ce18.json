{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewProductForm(_ref) {\n  _s();\n\n  let {\n    checkboxArray\n  } = _ref;\n  let data = [];\n\n  function getData() {\n    checkboxArray.forEach((chemical, index) => {\n      data.push({\n        p_id: index,\n        p_name: chemical,\n        isChecked: false\n      });\n    });\n  }\n\n  getData();\n\n  const handleSubmit = () => {\n    let chemicals = \"\";\n    data.forEach(data => {\n      if (data.isChecked === true) {\n        chemicals += `${data.p_name} ,`;\n      } else {\n        console.log(\"i cry\");\n      }\n    });\n    let newProduct = { ...form,\n      chemicals: chemicals\n    };\n    console.log(newProduct);\n    fetch(`http://localhost:9292/saved_products`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newProduct)\n    }).then(console.log(\"posted\"));\n  };\n\n  const [form, setForm] = useState({\n    name: \"\",\n    brand: \"\",\n    price: \"\",\n    chemicals: \",\"\n  });\n\n  const handleChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  console.log(form);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.name,\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.brand,\n          type: \"text\",\n          name: \"brand\",\n          placeholder: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.price,\n          type: \"text\",\n          name: \"price\",\n          placeholder: \"Price\",\n          style: {\n            width: '80px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select All \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), checkboxArray.map((li, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"chemicals\",\n          value: li,\n          id: index,\n          checked: li.isChecked,\n          onChange: () => {\n            data[index].isChecked = !data[index].isChecked;\n            console.log(data[index].isChecked);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: li,\n          children: li\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n} // // Empty use state object in format used in db.\n//   const [form, setForm] = useState({\n//     id: \"\",\n//     name: \"\",\n//     description: \"\",\n//     number: \"\"\n//   })\n// // Listens for change, duplicates object and populates with entered data.\n//   const handleChange = (event) => {\n//     setForm({\n//       ...form,\n//       [event.target.name]:event.target.value\n//     })\n//   }\n// // On click, actually posts data to db and then resets form fields.\n//   function handleSubmit(event) {\n//     event.preventDefault()\n//     fetch(`http://localhost:3000/contacts`,{\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(form),\n//     }).then(\n//     setForm({\n//       id: \"\",\n//       name: \"\",\n//       description: \"\",\n//       number: \"\"\n//     }))\n//   }\n// // Displays new contact form and calls necessary functions, links back to home.\n//   return (\n//     <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input onChange={handleChange} value={form.name} \n//               type=\"text\" name=\"name\" placeholder=\"Name\" />\n//           <input onChange={handleChange} value={form.description} \n//               type=\"text\" name=\"description\" placeholder=\"Description\" />\n//           <input onChange={handleChange} value={form.number} \n//               type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n//         </div>\n//         <button type=\"submit\">\n//           Add Contact\n//         </button>\n//       </form>\n//       <nav>\n//         <button>\n//           <Link to='/'>Home</Link>\n//         </button>\n//       </nav>\n//     </div>\n//   );\n// }\n\n\n_s(NewProductForm, \"LCAYxlx+2Wae12Ph+FLrltjWAig=\");\n\n_c = NewProductForm;\nexport default NewProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProductForm\");","map":{"version":3,"names":["React","useState","NewProductForm","checkboxArray","data","getData","forEach","chemical","index","push","p_id","p_name","isChecked","handleSubmit","chemicals","console","log","newProduct","form","fetch","method","headers","body","JSON","stringify","then","setForm","name","brand","price","handleChange","event","target","value","width","map","li"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from 'react'\n\n\nfunction NewProductForm({ checkboxArray }) {\n\n\n\n    let data = []\n\n\n    function getData() {\n        checkboxArray.forEach((chemical, index) => {\n            data.push({\n                p_id: index,\n                p_name: chemical,\n                isChecked: false\n            })\n\n        })\n    }\n    getData()\n\n\n    const handleSubmit = () => {\n        let chemicals = \"\"\n        data.forEach((data) => {\n\n            if (data.isChecked === true) {\n\n                chemicals += `${data.p_name} ,`\n            } else { console.log(\"i cry\") }\n        })\n        let newProduct = {\n            ...form,\n            chemicals: chemicals\n        };\n        console.log(newProduct);\n        fetch(`http://localhost:9292/saved_products`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newProduct),\n        }).then(\n            console.log(\"posted\"))\n     \n    }\n\n    const [form, setForm] = useState({\n        name: \"\",\n        brand: \"\",\n        price: \"\",\n        chemicals: \",\"\n    })\n\n\n    const handleChange = (event) => {\n        setForm({\n            ...form,\n            [event.target.name]: event.target.value\n        })\n\n    }\n\n    console.log(form)\n\n    return (\n        <div className=\"App\">\n            <form>\n                <div>\n                    <input onChange={handleChange} value={form.name}\n                        type=\"text\" name=\"name\" placeholder=\"Name\" />\n                    <input onChange={handleChange} value={form.brand}\n                        type=\"text\" name=\"brand\" placeholder=\"Brand\" />\n                    <input onChange={handleChange} value={form.price}\n                        type=\"text\" name=\"price\" placeholder=\"Price\" style ={{width: '80px'}} />\n                </div>\n                <span>Select All </span>\n                {checkboxArray.map((li, index) => (\n                    <div key={index}>\n                        <input\n                            type=\"checkbox\"\n                            name=\"chemicals\"\n                            value={li}\n                            id={index}\n                            checked={li.isChecked}\n                            onChange={() => {                  \n                                data[index].isChecked = !data[index].isChecked\n                                console.log(data[index].isChecked)\n                            }\n                            }\n                        />\n                        <label htmlFor={li}>{li}</label>\n                    </div>\n                ))}\n                <button type=\"button\" onClick={handleSubmit}>\n                    Submit\n                </button>\n            </form>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // Empty use state object in format used in db.\n//   const [form, setForm] = useState({\n//     id: \"\",\n//     name: \"\",\n//     description: \"\",\n//     number: \"\"\n//   })\n\n// // Listens for change, duplicates object and populates with entered data.\n//   const handleChange = (event) => {\n//     setForm({\n//       ...form,\n//       [event.target.name]:event.target.value\n//     })\n//   }\n\n// // On click, actually posts data to db and then resets form fields.\n//   function handleSubmit(event) {\n//     event.preventDefault()\n//     fetch(`http://localhost:3000/contacts`,{\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(form),\n//     }).then(\n//     setForm({\n//       id: \"\",\n//       name: \"\",\n//       description: \"\",\n//       number: \"\"\n//     }))\n//   }\n\n// // Displays new contact form and calls necessary functions, links back to home.\n//   return (\n//     <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <input onChange={handleChange} value={form.name} \n//               type=\"text\" name=\"name\" placeholder=\"Name\" />\n//           <input onChange={handleChange} value={form.description} \n//               type=\"text\" name=\"description\" placeholder=\"Description\" />\n//           <input onChange={handleChange} value={form.number} \n//               type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n//         </div>\n//         <button type=\"submit\">\n//           Add Contact\n//         </button>\n//       </form>\n//       <nav>\n//         <button>\n//           <Link to='/'>Home</Link>\n//         </button>\n//       </nav>\n//     </div>\n//   );\n// }\n\nexport default NewProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}