{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { default as ReactSelect } from \"react-select\";\nimport { components } from \"react-select\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Option = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(components.Option, { ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: props.isSelected,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Option;\nconst colourOptions = [{\n  value: \"ocean1\",\n  label: \"Ocean\"\n}, {\n  value: \"blue\",\n  label: \"Blue\"\n}, {\n  value: \"purple\",\n  label: \"Purple\"\n}, {\n  value: \"red\",\n  label: \"Red\"\n}, {\n  value: \"orange\",\n  label: \"Orange\"\n}, {\n  value: \"yellow\",\n  label: \"Yellow\"\n}, {\n  value: \"green\",\n  label: \"Green\"\n}, {\n  value: \"forest\",\n  label: \"Forest\"\n}, {\n  value: \"slate\",\n  label: \"Slate\"\n}, {\n  value: \"silver\",\n  label: \"Silver\"\n}];\n\nconst FormOp = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    id: \"\",\n    name: \"\",\n    brand: \"\",\n    price: \"\",\n    chemicals: [\"\"]\n  });\n\n  const handleChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(`http://localhost:3000/routines`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(setForm({\n      id: \"\",\n      name: \"\",\n      brand: \"\",\n      price: \"\",\n      chemicals: [\"\"]\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(components.Form, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      style: {\n        marginLeft: \"646px\",\n        marginRight: \"790px\",\n        width: \"18%\",\n        marginTop: \"-40px\",\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            value: form.name,\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            value: form.description,\n            type: \"text\",\n            name: \"description\",\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleChange,\n            value: form.number,\n            type: \"tel\",\n            maxlength: \"10\",\n            name: \"number\",\n            placeholder: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormOp, \"uqCOGYDI/4uE9cqPcsdhqpQ+mZM=\");\n\n_c2 = FormOp;\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        optionSelected: selected\n      });\n    };\n\n    this.state = {\n      optionSelected: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"d-inline-block\",\n      \"data-toggle\": \"popover\",\n      \"data-trigger\": \"focus\",\n      \"data-content\": \"Please selecet account(s)\",\n      children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n        options: colourOptions,\n        isMulti: true,\n        closeMenuOnSelect: false,\n        hideSelectedOptions: false,\n        components: ({\n          Option\n        }, {\n          Form\n        }),\n        onChange: this.handleChange,\n        allowSelectAll: true,\n        value: this.state.optionSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n} // import React from \"react\";\n// import {useState} from 'react'\n// import { components } from \"react-select\";\n// import { default as ReactSelect } from \"react-select\";\n// export default function NewProductForm() {\n//     const [form, setForm] = useState({\n//         id: \"\",\n//         name: \"\",\n//         brand: \"\",\n//         price: \"\",\n//         chemicals: [\"\"]\n//       })\n//       const handleChange = (event) => {\n//         setForm({\n//           ...form,\n//           [event.target.name]:event.target.value\n//         })\n//       }\n//       function handleSubmit(event) {\n//         event.preventDefault()\n//         fetch(`http://localhost:3000/routines`,{\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(form),\n//         }).then(\n//         setForm({\n//         id: \"\",\n//         name: \"\",\n//         brand: \"\",\n//         price: \"\",\n//         chemicals: [\"\"]\n//         }))\n//       }\n//     // Displays new contact form and calls necessary functions, links back to home.\n//       return (\n//     // </div>\n//         // <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n//         //   <form onSubmit={handleSubmit}>\n//         //     <div>\n//         //       <input onChange={handleChange} value={form.name} \n//         //           type=\"text\" name=\"name\" placeholder=\"Name\" />\n//         //       <input onChange={handleChange} value={form.description} \n//         //           type=\"text\" name=\"description\" placeholder=\"Description\" />\n//         //       <input onChange={handleChange} value={form.number} \n//         //           type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n//         //     </div>\n//         //     <button type=\"submit\">\n//         //       Add Contact\n//         //     </button>\n//         //   </form>\n//         // </div>\n//       );\n//     }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Option\");\n$RefreshReg$(_c2, \"FormOp\");","map":{"version":3,"names":["React","Component","default","ReactSelect","components","useState","Option","props","isSelected","label","colourOptions","value","FormOp","form","setForm","id","name","brand","price","chemicals","handleChange","event","target","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","marginLeft","marginRight","width","marginTop","alignItems","description","number","Example","constructor","selected","setState","optionSelected","state","render","Form"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { default as ReactSelect } from \"react-select\";\nimport { components } from \"react-select\";\nimport {useState} from 'react'\n\nconst Option = (props) => {\n    \n  return (  \n    <div>\n        \n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          checked={props.isSelected}\n          onChange={() => null}\n        />{\" \"}\n        <label>{props.label}</label>\n      </components.Option>\n    </div>\n  );\n};\n\n\nconst colourOptions = [\n    { value: \"ocean1\", label: \"Ocean\" },\n    { value: \"blue\", label: \"Blue\" },\n    { value: \"purple\", label: \"Purple\" },\n    { value: \"red\", label: \"Red\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"yellow\", label: \"Yellow\" },\n    { value: \"green\", label: \"Green\" },\n    { value: \"forest\", label: \"Forest\" },\n    { value: \"slate\", label: \"Slate\" },\n    { value: \"silver\", label: \"Silver\" }\n  ];\n\n\nconst FormOp = () => {\n\n    const [form, setForm] = useState({\n        id: \"\",\n        name: \"\",\n        brand: \"\",\n        price: \"\",\n        chemicals: [\"\"]\n      })\n    \n      const handleChange = (event) => {\n        setForm({\n          ...form,\n          [event.target.name]:event.target.value\n        })\n      }\n    \n      function handleSubmit(event) {\n        event.preventDefault()\n        fetch(`http://localhost:3000/routines`,{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(form),\n        }).then(\n        setForm({\n        id: \"\",\n        name: \"\",\n        brand: \"\",\n        price: \"\",\n        chemicals: [\"\"]\n        }))\n      }\n    return (\n        <components.Form>\n        <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <input onChange={handleChange} value={form.name} \n                type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <input onChange={handleChange} value={form.description} \n                type=\"text\" name=\"description\" placeholder=\"Description\" />\n            <input onChange={handleChange} value={form.number} \n                type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n          </div>\n          <button type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n        </div>\n        </components.Form>\n    )\n    \n\n}\n\n\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionSelected: null\n    };\n  }\n\n  handleChange = (selected) => {\n    this.setState({\n      optionSelected: selected\n    });\n  };\n\n\n\n  render() {\n    return (\n      <span\n        className=\"d-inline-block\"\n        data-toggle=\"popover\"\n        data-trigger=\"focus\"\n        data-content=\"Please selecet account(s)\"\n      >\n        <ReactSelect\n          options={colourOptions}\n          isMulti\n          closeMenuOnSelect={false}\n          hideSelectedOptions={false}\n          components={{Option} ,{Form}}\n          onChange={this.handleChange}\n          allowSelectAll={true}\n          value={this.state.optionSelected}\n        />\n\n\n      </span>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\";\n// import {useState} from 'react'\n// import { components } from \"react-select\";\n// import { default as ReactSelect } from \"react-select\";\n\n// export default function NewProductForm() {\n\n\n\n\n//     const [form, setForm] = useState({\n//         id: \"\",\n//         name: \"\",\n//         brand: \"\",\n//         price: \"\",\n//         chemicals: [\"\"]\n//       })\n    \n//       const handleChange = (event) => {\n//         setForm({\n//           ...form,\n//           [event.target.name]:event.target.value\n//         })\n//       }\n    \n//       function handleSubmit(event) {\n//         event.preventDefault()\n//         fetch(`http://localhost:3000/routines`,{\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(form),\n//         }).then(\n//         setForm({\n//         id: \"\",\n//         name: \"\",\n//         brand: \"\",\n//         price: \"\",\n//         chemicals: [\"\"]\n//         }))\n//       }\n    \n//     // Displays new contact form and calls necessary functions, links back to home.\n//       return (\n\n//     // </div>\n//         // <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n//         //   <form onSubmit={handleSubmit}>\n//         //     <div>\n//         //       <input onChange={handleChange} value={form.name} \n//         //           type=\"text\" name=\"name\" placeholder=\"Name\" />\n//         //       <input onChange={handleChange} value={form.description} \n//         //           type=\"text\" name=\"description\" placeholder=\"Description\" />\n//         //       <input onChange={handleChange} value={form.number} \n//         //           type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n//         //     </div>\n//         //     <button type=\"submit\">\n//         //       Add Contact\n//         //     </button>\n//         //   </form>\n//         // </div>\n//       );\n//     }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}