{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport RoutineList from './RoutineList';\nimport RoutineSearch from './RoutineSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoutinePage() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [savedProducts, setSavedProducts] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [chemicals, setChemicals] = useState([]);\n  const [render, reRender] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:9292/ingredients`).then(res => res.json()).then(data => {\n      setIngredients(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`http://localhost:9292/saved_products`).then(res => res.json()).then(data => {\n      setSavedProducts(data);\n    });\n  }, [render]);\n\n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter(product => product.id !== id);\n    setSavedProducts(newSavedProducts);\n  }\n\n  let list = savedProducts.filter(product => product.name.toLowerCase().includes(search.toLowerCase())); //   temp1.map((e) => {\n  //     return e.split(', ')\n  // }).flat()\n\n  let chemArray = [];\n  let chemTypeArray = [];\n\n  function getChem() {\n    list.forEach(product => {\n      chemArray.push(product.chemicals);\n      chemTypeArray = chemArray.map(e => {\n        return e.split(', ');\n      }).flat();\n    });\n    return chemTypeArray;\n  }\n\n  getChem();\n\n  function alertMe(chemTypeArray) {\n    console.log(chemTypeArray);\n  }\n\n  alertMe(); // pull list chemicals\n  //split\n  //compare to name\n  //use name to find chem_type\n  // switch case compare\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RoutineSearch, {\n      search: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoutineList, {\n      reRender: reRender,\n      handleSavedDelete: handleSavedDelete,\n      savedProducts: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoutinePage, \"6D4cLblqVi29qgJvTUuqgNhZw1o=\");\n\n_c = RoutinePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutinePage\");","map":{"version":3,"names":["React","useState","useEffect","RoutineList","RoutineSearch","RoutinePage","search","setSearch","savedProducts","setSavedProducts","ingredients","setIngredients","chemicals","setChemicals","render","reRender","fetch","then","res","json","data","handleSavedDelete","id","newSavedProducts","filter","product","list","name","toLowerCase","includes","chemArray","chemTypeArray","getChem","forEach","push","map","e","split","flat","alertMe","console","log"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport RoutineList from './RoutineList'\nimport RoutineSearch from './RoutineSearch'\n\n\nexport default function RoutinePage() {\n\n  const [search, setSearch] = useState('')\n  const [savedProducts, setSavedProducts] = useState([])\n  const [ingredients, setIngredients] = useState([])\n  const [chemicals, setChemicals] = useState([])\n  const [render, reRender] = useState(true)\n\n  useEffect(() => {\n    fetch(`http://localhost:9292/ingredients`)\n        .then(res => res.json())\n        .then(data => {\n            setIngredients(data)\n        })\n}, [])\n\n  useEffect(() => {\n      fetch(`http://localhost:9292/saved_products`)\n          .then(res => res.json())\n          .then(data => {\n              setSavedProducts(data)\n          })\n  }, [render])\n\n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter((product) => product.id !== id)\n    setSavedProducts(newSavedProducts)\n}\n\n  let list = savedProducts.filter((product) => product.name.toLowerCase().includes(search.toLowerCase()))\n\n\n   \n//   temp1.map((e) => {\n//     return e.split(', ')\n// }).flat()\nlet chemArray = []\nlet chemTypeArray = []\n\n  function getChem(){\n\n\n      list.forEach((product) => {\n        chemArray.push(product.chemicals)\n        chemTypeArray = chemArray.map((e) => {\n          return e.split(', ')\n      }).flat()\n        \n      })\n      \n      return chemTypeArray\n    }\n    getChem()\n  function alertMe(chemTypeArray) {\n\n    console.log(chemTypeArray)\n\n  }\n  alertMe()\n// pull list chemicals\n  //split\n  //compare to name\n  //use name to find chem_type\n  // switch case compare\n\n  return (\n    <div>\n      <RoutineSearch search={setSearch}/>  \n\n      <RoutineList reRender={reRender} handleSavedDelete={handleSavedDelete} savedProducts={list} />\n      \n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EAEpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACa,MAAD,EAASC,QAAT,IAAqBd,QAAQ,CAAC,IAAD,CAAnC;EAEAC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAE,mCAAF,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVT,cAAc,CAACS,IAAD,CAAd;IACH,CAJL;EAKH,CANU,EAMR,EANQ,CAAT;EAQAlB,SAAS,CAAC,MAAM;IACZc,KAAK,CAAE,sCAAF,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVX,gBAAgB,CAACW,IAAD,CAAhB;IACH,CAJL;EAKH,CANQ,EAMN,CAACN,MAAD,CANM,CAAT;;EAQA,SAASO,iBAAT,CAA2BC,EAA3B,EAA+B;IAC7B,MAAMC,gBAAgB,GAAGf,aAAa,CAACgB,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACH,EAAR,KAAeA,EAAjD,CAAzB;IACAb,gBAAgB,CAACc,gBAAD,CAAhB;EACH;;EAEC,IAAIG,IAAI,GAAGlB,aAAa,CAACgB,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACE,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCvB,MAAM,CAACsB,WAAP,EAApC,CAAlC,CAAX,CA7BoC,CAiCtC;EACA;EACA;;EACA,IAAIE,SAAS,GAAG,EAAhB;EACA,IAAIC,aAAa,GAAG,EAApB;;EAEE,SAASC,OAAT,GAAkB;IAGdN,IAAI,CAACO,OAAL,CAAcR,OAAD,IAAa;MACxBK,SAAS,CAACI,IAAV,CAAeT,OAAO,CAACb,SAAvB;MACAmB,aAAa,GAAGD,SAAS,CAACK,GAAV,CAAeC,CAAD,IAAO;QACnC,OAAOA,CAAC,CAACC,KAAF,CAAQ,IAAR,CAAP;MACH,CAFiB,EAEfC,IAFe,EAAhB;IAID,CAND;IAQA,OAAOP,aAAP;EACD;;EACDC,OAAO;;EACT,SAASO,OAAT,CAAiBR,aAAjB,EAAgC;IAE9BS,OAAO,CAACC,GAAR,CAAYV,aAAZ;EAED;;EACDQ,OAAO,GA1D6B,CA2DtC;EACE;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAe,MAAM,EAAEhC;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,WAAD;MAAa,QAAQ,EAAEQ,QAAvB;MAAiC,iBAAiB,EAAEM,iBAApD;MAAuE,aAAa,EAAEK;IAAtF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAzEuBrB,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}