{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport RoutineList from './RoutineList';\nimport RoutineSearch from './RoutineSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoutinePage() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [savedProducts, setSavedProducts] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [render, reRender] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:9292/saved_products`).then(res => res.json()).then(data => {\n      setSavedProducts(data);\n    });\n  }, [render]);\n  useEffect(() => {\n    fetch(`http://localhost:9292/products`).then(res => res.json()).then(data => {\n      setProducts(data);\n    });\n  }, [render]); // function alertProduct() {\n  //     switch(x)\n  //   // et_aha = Interaction.create(warning: \"Retinols and AHAs used together are likely to cause redness and flaking.\", cause1: \"vitamin A\", cause2: \"alpha-hydroxy acid\")\n  //   // aha_aha = Interaction.create(warning: \"Use caution with multiple exfoliators in one routine.\", cause1: \"alpha-hydroxy acid\", cause2: \"alpha-hydroxy acid\")\n  //   // aha_bha = Interaction.create(warning: \"Use caution with multiple exfoliators in one routine.\", cause1: \"poly-hydroxy acid\", cause2: \"alpha-hydroxy acid\")\n  //   // ret_vitc = Interaction.create(warning: \"Be careful when using vitamin C after a retinol as redness and dryness can occur.\", cause1: \"vitamin A\", cause2: \"vitamin C\")\n  //   // ret_benz = Interaction.create(warning: \"Peroxides used in conjunction with retinols can irritate and dry out the skin.\", cause1: \"vitamin A\", cause2: \"peroxide\")\n  //   // aha_vitc = Interaction.create(warning: \"AHAs can reduce the effectiveness of vitamin C if mixed\", cause1: \"alpha-hydroxy acid\", cause2: \"vitamin C\")\n  //   // = Interaction.create(warning: \"\", cause1: \"\", cause2: \"\")\n  // }\n\n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter(product => product.id !== id);\n    setSavedProducts(newSavedProducts);\n  }\n\n  let list = savedProducts.filter(product => product.name.toLowerCase().includes(search.toLowerCase())); // function alertProduct() {\n  //       switch(list.)\n  // }\n\n  console.log(list[0].chemicals);\n  console.log(list[0].chemicals);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RoutineSearch, {\n      search: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoutineList, {\n      reRender: reRender,\n      handleSavedDelete: handleSavedDelete,\n      savedProducts: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoutinePage, \"0kYUwebxUoApg9B3Q78XkbKRWHo=\");\n\n_c = RoutinePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutinePage\");","map":{"version":3,"names":["React","useState","useEffect","RoutineList","RoutineSearch","RoutinePage","search","setSearch","savedProducts","setSavedProducts","products","setProducts","render","reRender","fetch","then","res","json","data","handleSavedDelete","id","newSavedProducts","filter","product","list","name","toLowerCase","includes","console","log","chemicals"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport RoutineList from './RoutineList'\nimport RoutineSearch from './RoutineSearch'\n\n\nexport default function RoutinePage() {\n\n  const [search, setSearch] = useState('')\n  const [savedProducts, setSavedProducts] = useState([])\n  const [products, setProducts] = useState([])\n  const [render, reRender] = useState(true)\n\n  useEffect(() => {\n      fetch(`http://localhost:9292/saved_products`)\n          .then(res => res.json())\n          .then(data => {\n              setSavedProducts(data)\n          })\n  }, [render])\n\n    useEffect(() => {\n      fetch(`http://localhost:9292/products`)\n          .then(res => res.json())\n          .then(data => {\n              setProducts(data)\n          })\n  }, [render])\n\n\n\n// function alertProduct() {\n//     switch(x)\n\n\n\n//   // et_aha = Interaction.create(warning: \"Retinols and AHAs used together are likely to cause redness and flaking.\", cause1: \"vitamin A\", cause2: \"alpha-hydroxy acid\")\n//   // aha_aha = Interaction.create(warning: \"Use caution with multiple exfoliators in one routine.\", cause1: \"alpha-hydroxy acid\", cause2: \"alpha-hydroxy acid\")\n//   // aha_bha = Interaction.create(warning: \"Use caution with multiple exfoliators in one routine.\", cause1: \"poly-hydroxy acid\", cause2: \"alpha-hydroxy acid\")\n//   // ret_vitc = Interaction.create(warning: \"Be careful when using vitamin C after a retinol as redness and dryness can occur.\", cause1: \"vitamin A\", cause2: \"vitamin C\")\n//   // ret_benz = Interaction.create(warning: \"Peroxides used in conjunction with retinols can irritate and dry out the skin.\", cause1: \"vitamin A\", cause2: \"peroxide\")\n//   // aha_vitc = Interaction.create(warning: \"AHAs can reduce the effectiveness of vitamin C if mixed\", cause1: \"alpha-hydroxy acid\", cause2: \"vitamin C\")\n//   // = Interaction.create(warning: \"\", cause1: \"\", cause2: \"\")\n\n// }\n\n\n  \n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter((product) => product.id !== id)\n    setSavedProducts(newSavedProducts)\n}\n\n  let list = savedProducts.filter((product) => product.name.toLowerCase().includes(search.toLowerCase()))\n\n// function alertProduct() {\n//       switch(list.)\n      \n\n// }\n\nconsole.log(list[0].chemicals)\nconsole.log(list[0].chemicals)\n  return (\n    <div>\n      <RoutineSearch search={setSearch}/>  \n\n      <RoutineList reRender={reRender} handleSavedDelete={handleSavedDelete} savedProducts={list} />\n      \n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EAEpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,MAAD,EAASC,QAAT,IAAqBZ,QAAQ,CAAC,IAAD,CAAnC;EAEAC,SAAS,CAAC,MAAM;IACZY,KAAK,CAAE,sCAAF,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVT,gBAAgB,CAACS,IAAD,CAAhB;IACH,CAJL;EAKH,CANQ,EAMN,CAACN,MAAD,CANM,CAAT;EAQEV,SAAS,CAAC,MAAM;IACdY,KAAK,CAAE,gCAAF,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVP,WAAW,CAACO,IAAD,CAAX;IACH,CAJL;EAKH,CANU,EAMR,CAACN,MAAD,CANQ,CAAT,CAfkC,CAyBtC;EACA;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EAIE,SAASO,iBAAT,CAA2BC,EAA3B,EAA+B;IAC7B,MAAMC,gBAAgB,GAAGb,aAAa,CAACc,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACH,EAAR,KAAeA,EAAjD,CAAzB;IACAX,gBAAgB,CAACY,gBAAD,CAAhB;EACH;;EAEC,IAAIG,IAAI,GAAGhB,aAAa,CAACc,MAAd,CAAsBC,OAAD,IAAaA,OAAO,CAACE,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCrB,MAAM,CAACoB,WAAP,EAApC,CAAlC,CAAX,CA/CoC,CAiDtC;EACA;EAGA;;EAEAE,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAApB;EACAF,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,CAAD,CAAJ,CAAQM,SAApB;EACE,oBACE;IAAA,wBACE,QAAC,aAAD;MAAe,MAAM,EAAEvB;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,WAAD;MAAa,QAAQ,EAAEM,QAAvB;MAAiC,iBAAiB,EAAEM,iBAApD;MAAuE,aAAa,EAAEK;IAAtF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAjEuBnB,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}