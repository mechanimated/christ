{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport RoutineList from './RoutineList';\nimport RoutineSearch from './RoutineSearch';\nimport NewProductForm from './NewProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RoutinePage() {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [savedProducts, setSavedProducts] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [render, reRender] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:9292/ingredients`).then(res => res.json()).then(data => {\n      setIngredients(data);\n    });\n  }, [render]);\n  useEffect(() => {\n    fetch(`http://localhost:9292/saved_products`).then(res => res.json()).then(data => {\n      setSavedProducts(data);\n    });\n  }, [render]);\n\n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter(product => product.id !== id);\n    setSavedProducts(newSavedProducts);\n  }\n\n  let list = savedProducts.filter(product => product.name.toLowerCase().includes(search.toLowerCase()));\n  let chemArray = [];\n  let chemTypeArray = [];\n  let chemTypeCheck = [];\n  let checkboxArray = [];\n  let message = [];\n\n  function getChem() {\n    list.forEach(product => {\n      chemArray.push(product.chemicals);\n      chemArray = chemArray.map(e => {\n        return e.split(', ');\n      }).flat();\n    });\n    return chemArray;\n  }\n\n  getChem();\n\n  function getChemType() {\n    ingredients.forEach(product => {\n      chemTypeArray.push(product.name);\n      chemTypeArray = chemTypeArray.map(e => {\n        return e.split(', ');\n      }).flat();\n      checkboxArray = chemTypeArray;\n      chemTypeArray.forEach(chemType => {\n        if (chemArray.includes(product.name)) {\n          if (chemTypeCheck.indexOf(product.chem_type) === -1) {\n            chemTypeCheck.push(product.chem_type);\n          }\n        } else {}\n      });\n    });\n    return chemTypeArray;\n  }\n\n  getChemType();\n\n  function alertMe() {\n    if (chemTypeCheck.includes(\"vitamin B3\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n      message.push('Retinols and AHAs should not be used together! ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"vitamin C\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n      message.push('Try to use Vitamin C and other acids at different times of day. ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"phenol\") && chemTypeCheck.includes(\"peroxide\")) {\n      message.push('Dark spot treatments and peroxides can bleach your skin! ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"beta-hydroxy acid\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n      message.push('AHAs and BHAs can dry out skin. Be sure to moisturize after use. ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"peroxide\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n      message.push('Peroxides and AHAs can cause dry, flaky skin. ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"vitamin C\") && chemTypeCheck.includes(\"peroxide\")) {\n      message.push('Vitamin C and peroxide neutralize each other. Best not to use them together. ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"vitamin B3\") && chemTypeCheck.includes(\"beta-hydroxy acid\")) {\n      message.push('Retinols and BHAs can irritate and redden the skin. ');\n    } else {}\n\n    if (chemTypeCheck.includes(\"silicone\")) {\n      message.push('Make sure you use products containing silicone last in your routine. ');\n    } else {}\n\n    if (!chemTypeCheck.includes(\"salicylate\") && !chemTypeCheck.includes(\"dibenzoylmethane\") && !chemTypeCheck.includes(\"cyanocinnamic ester\")) {\n      message.push('Your skincare routine does not include sunscreen! Consider adding some. ');\n    } else {}\n  }\n\n  alertMe();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RoutineSearch, {\n      search: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [\" \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RoutineList, {\n      checkboxArray: checkboxArray,\n      reRender: reRender,\n      handleSavedDelete: handleSavedDelete,\n      savedProducts: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoutinePage, \"IFfEq6psU79f8Pcg81YMRmwN8FQ=\");\n\n_c = RoutinePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoutinePage\");","map":{"version":3,"names":["React","useState","useEffect","RoutineList","RoutineSearch","NewProductForm","RoutinePage","search","setSearch","savedProducts","setSavedProducts","ingredients","setIngredients","render","reRender","fetch","then","res","json","data","handleSavedDelete","id","newSavedProducts","filter","product","list","name","toLowerCase","includes","chemArray","chemTypeArray","chemTypeCheck","checkboxArray","message","getChem","forEach","push","chemicals","map","e","split","flat","getChemType","chemType","indexOf","chem_type","alertMe"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/RoutinePage.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport RoutineList from './RoutineList'\nimport RoutineSearch from './RoutineSearch'\nimport NewProductForm from './NewProductForm'\n\n\nexport default function RoutinePage() {\n\n  const [search, setSearch] = useState('')\n  const [savedProducts, setSavedProducts] = useState([])\n  const [ingredients, setIngredients] = useState([])\n  const [render, reRender] = useState(true)\n\n  useEffect(() => {\n    fetch(`http://localhost:9292/ingredients`)\n        .then(res => res.json())\n        .then(data => {\n            setIngredients(data)\n        })\n}, [render])\n\n  useEffect(() => {\n      fetch(`http://localhost:9292/saved_products`)\n          .then(res => res.json())\n          .then(data => {\n              setSavedProducts(data)\n          })\n  }, [render])\n\n  function handleSavedDelete(id) {\n    const newSavedProducts = savedProducts.filter((product) => product.id !== id)\n    setSavedProducts(newSavedProducts)\n}\n\n  let list = savedProducts.filter((product) => product.name.toLowerCase().includes(search.toLowerCase()))\n\n\nlet chemArray = []\nlet chemTypeArray = []\nlet chemTypeCheck = []\nlet checkboxArray= []\nlet message = []\n\n  function getChem(){\n\n      list.forEach((product) => {\n        chemArray.push(product.chemicals)\n        chemArray = chemArray.map((e) => {\n          return e.split(', ')\n        }).flat()   \n      })\n      return chemArray\n    }\n  \n  getChem()\n\n\n  function getChemType() {\n\n    ingredients.forEach((product) => {\n      chemTypeArray.push(product.name)\n      chemTypeArray = chemTypeArray.map((e) => {\n        return e.split(', ')\n      }).flat()   \n      checkboxArray = chemTypeArray\n    chemTypeArray.forEach((chemType) => {\n\n      if(chemArray.includes(product.name)) {\n\n        if(chemTypeCheck.indexOf(product.chem_type) === -1) {\n          chemTypeCheck.push(product.chem_type);\n        }\n\n      } else { }\n    })\n    })\n    return chemTypeArray\n  }\n\n  getChemType()\n\n\nfunction alertMe() {\n if(chemTypeCheck.includes(\"vitamin B3\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n  message.push('Retinols and AHAs should not be used together! ')\n } else {}\n if(chemTypeCheck.includes(\"vitamin C\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n  message.push('Try to use Vitamin C and other acids at different times of day. ')\n } else {}\n if(chemTypeCheck.includes(\"phenol\") && chemTypeCheck.includes(\"peroxide\")) {\n  message.push('Dark spot treatments and peroxides can bleach your skin! ')\n } else {}\n\n if(chemTypeCheck.includes(\"beta-hydroxy acid\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n  message.push('AHAs and BHAs can dry out skin. Be sure to moisturize after use. ')\n } else {}\n\n if(chemTypeCheck.includes(\"peroxide\") && chemTypeCheck.includes(\"alpha-hydroxy acid\")) {\n  message.push('Peroxides and AHAs can cause dry, flaky skin. ')\n } else {}\n\n if(chemTypeCheck.includes(\"vitamin C\") && chemTypeCheck.includes(\"peroxide\")) {\n  message.push('Vitamin C and peroxide neutralize each other. Best not to use them together. ')\n } else {}\n\n if(chemTypeCheck.includes(\"vitamin B3\") && chemTypeCheck.includes(\"beta-hydroxy acid\")) {\n  message.push('Retinols and BHAs can irritate and redden the skin. ')\n } else {}\n\n if(chemTypeCheck.includes(\"silicone\")) {\n  message.push('Make sure you use products containing silicone last in your routine. ')\n } else {}\n if(!chemTypeCheck.includes(\"salicylate\") && !chemTypeCheck.includes(\"dibenzoylmethane\") && !chemTypeCheck.includes(\"cyanocinnamic ester\")) {\n  message.push('Your skincare routine does not include sunscreen! Consider adding some. ')\n } else {}\n\n}\nalertMe() \n\n\n  return (\n    <div>\n      <RoutineSearch search={setSearch}/> \n      <div className='message'> {message}</div> \n      <RoutineList checkboxArray={checkboxArray} reRender={reRender} handleSavedDelete={handleSavedDelete} savedProducts={list} />\n      \n      \n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}