{"ast":null,"code":"var _jsxFileName = \"/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from 'react'; // Function for posting new data to db.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewContactForm() {\n  _s();\n\n  // Empty use state object in format used in db.\n  const [form, setForm] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    number: \"\"\n  }); // Listens for change, duplicates object and populates with entered data.\n\n  const handleChange = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  }; // On click, actually posts data to db and then resets form fields.\n\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    fetch(`http://localhost:3000/contacts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(setForm({\n      id: \"\",\n      name: \"\",\n      description: \"\",\n      number: \"\"\n    }));\n  } // Displays new contact form and calls necessary functions, links back to home.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    style: {\n      marginLeft: \"646px\",\n      marginRight: \"790px\",\n      width: \"18%\",\n      marginTop: \"-40px\",\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.name,\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.description,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: form.number,\n          type: \"tel\",\n          maxlength: \"10\",\n          name: \"number\",\n          placeholder: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewContactForm, \"ReONmmWiSbdZu/rGPyvwCLF3Qqc=\");\n\n_c = NewContactForm;\nexport default NewContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContactForm\");","map":{"version":3,"names":["React","useState","NewContactForm","form","setForm","id","name","description","number","handleChange","event","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","marginLeft","marginRight","width","marginTop","alignItems"],"sources":["/root/code/projects/skinteractions/dannyliz/project-client/src/components/NewProductForm.js"],"sourcesContent":["import React from \"react\";\nimport {useState} from 'react'\n\n// Function for posting new data to db.\nfunction NewContactForm() {\n\n// Empty use state object in format used in db.\n  const [form, setForm] = useState({\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    number: \"\"\n  })\n\n// Listens for change, duplicates object and populates with entered data.\n  const handleChange = (event) => {\n    setForm({\n      ...form,\n      [event.target.name]:event.target.value\n    })\n  }\n\n// On click, actually posts data to db and then resets form fields.\n  function handleSubmit(event) {\n    event.preventDefault()\n    fetch(`http://localhost:3000/contacts`,{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(form),\n    }).then(\n    setForm({\n      id: \"\",\n      name: \"\",\n      description: \"\",\n      number: \"\"\n    }))\n  }\n\n// Displays new contact form and calls necessary functions, links back to home.\n  return (\n    <div className=\"box\" style={{marginLeft: \"646px\", marginRight:\"790px\", width:\"18%\",  marginTop: \"-40px\", alignItems:'center'}}>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input onChange={handleChange} value={form.name} \n              type=\"text\" name=\"name\" placeholder=\"Name\" />\n          <input onChange={handleChange} value={form.description} \n              type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input onChange={handleChange} value={form.number} \n              type=\"tel\" maxlength=\"10\" name=\"number\" placeholder=\"Number\" />\n        </div>\n        <button type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewContactForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB,C,CAEA;;;;AACA,SAASC,cAAT,GAA0B;EAAA;;EAE1B;EACE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;IAC/BI,EAAE,EAAE,EAD2B;IAE/BC,IAAI,EAAE,EAFyB;IAG/BC,WAAW,EAAE,EAHkB;IAI/BC,MAAM,EAAE;EAJuB,CAAD,CAAhC,CAHwB,CAU1B;;EACE,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9BN,OAAO,CAAC,EACN,GAAGD,IADG;MAEN,CAACO,KAAK,CAACC,MAAN,CAAaL,IAAd,GAAoBI,KAAK,CAACC,MAAN,CAAaC;IAF3B,CAAD,CAAP;EAID,CALD,CAXwB,CAkB1B;;;EACE,SAASC,YAAT,CAAsBH,KAAtB,EAA6B;IAC3BA,KAAK,CAACI,cAAN;IACAC,KAAK,CAAE,gCAAF,EAAkC;MACrCC,MAAM,EAAE,MAD6B;MAErCC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4B;MAKrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf;IAL+B,CAAlC,CAAL,CAMGkB,IANH,CAOAjB,OAAO,CAAC;MACNC,EAAE,EAAE,EADE;MAENC,IAAI,EAAE,EAFA;MAGNC,WAAW,EAAE,EAHP;MAINC,MAAM,EAAE;IAJF,CAAD,CAPP;EAaD,CAlCuB,CAoC1B;;;EACE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAqB,KAAK,EAAE;MAACc,UAAU,EAAE,OAAb;MAAsBC,WAAW,EAAC,OAAlC;MAA2CC,KAAK,EAAC,KAAjD;MAAyDC,SAAS,EAAE,OAApE;MAA6EC,UAAU,EAAC;IAAxF,CAA5B;IAAA,uBACE;MAAM,QAAQ,EAAEb,YAAhB;MAAA,wBACE;QAAA,wBACE;UAAO,QAAQ,EAAEJ,YAAjB;UAA+B,KAAK,EAAEN,IAAI,CAACG,IAA3C;UACI,IAAI,EAAC,MADT;UACgB,IAAI,EAAC,MADrB;UAC4B,WAAW,EAAC;QADxC;UAAA;UAAA;UAAA;QAAA,QADF,eAGE;UAAO,QAAQ,EAAEG,YAAjB;UAA+B,KAAK,EAAEN,IAAI,CAACI,WAA3C;UACI,IAAI,EAAC,MADT;UACgB,IAAI,EAAC,aADrB;UACmC,WAAW,EAAC;QAD/C;UAAA;UAAA;UAAA;QAAA,QAHF,eAKE;UAAO,QAAQ,EAAEE,YAAjB;UAA+B,KAAK,EAAEN,IAAI,CAACK,MAA3C;UACI,IAAI,EAAC,KADT;UACe,SAAS,EAAC,IADzB;UAC8B,IAAI,EAAC,QADnC;UAC4C,WAAW,EAAC;QADxD;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAtDQN,c;;KAAAA,c;AAwDT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}